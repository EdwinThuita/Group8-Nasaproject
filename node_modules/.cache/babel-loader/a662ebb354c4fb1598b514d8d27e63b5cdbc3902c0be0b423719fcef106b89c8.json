{"ast":null,"code":"var _jsxFileName = \"/home/edwin/Development/code/phase-2/Group8-Nasaproject/src/Components/MarsWeather/marsWeather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport API_KEY from \"../../Utils/apiKey\";\nimport styles from \"./marsWeather.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarsWeather = () => {\n  _s();\n  const [weather, setWeather] = useState({});\n  const [temperature, setTemperature] = useState(\"\");\n  const [windSpeed, setWindSpeed] = useState(\"\");\n  const [pressure, setPressure] = useState(\"\");\n  useEffect(() => {\n    axios.get(`https://api.nasa.gov/insight_weather/?api_key=${API_KEY}&feedtype=json&ver=1.0`).then(res => {\n      setWeather(res.data);\n    });\n  }, []);\n  useEffect(() => {\n    if (Object.keys(weather).length) {\n      setTemperature(getTemperature(weather));\n      setPressure(getPressure(weather));\n      setWindSpeed(getWindSpeed(weather));\n    }\n  }, [weather]);\n  const getAverage = arr => {\n    let sum = 0;\n    for (let item of arr) {\n      sum += item;\n    }\n    return parseInt(sum / arr.length);\n  };\n  const getTemperature = data => {\n    let temps = data.validity_checks[1219].AT.sol_hours_with_data;\n    return getAverage(temps);\n  };\n  const getWindSpeed = data => {\n    let temps = data.validity_checks[1219].HWS.sol_hours_with_data;\n    return getAverage(temps);\n  };\n  const getPressure = data => {\n    let temps = data.validity_checks[1219].PRE.sol_hours_with_data;\n    return getAverage(temps);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.weather,\n    style: {\n      backgroundImage: `url(\"/planet-mars.jpg\")`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.h2,\n      children: \"Weather on Mars\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.data,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", temperature, \" F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind Speed: \", windSpeed, \" mph\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pressure: \", pressure, \" Pa\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(MarsWeather, \"vZOMJG50TNm86p15IFxHPKTP8BU=\");\n_c = MarsWeather;\nexport default MarsWeather;\nvar _c;\n$RefreshReg$(_c, \"MarsWeather\");","map":{"version":3,"names":["React","useState","useEffect","axios","API_KEY","styles","MarsWeather","weather","setWeather","temperature","setTemperature","windSpeed","setWindSpeed","pressure","setPressure","get","then","res","data","Object","keys","length","getTemperature","getPressure","getWindSpeed","getAverage","arr","sum","item","parseInt","temps","validity_checks","AT","sol_hours_with_data","HWS","PRE","backgroundImage","h2"],"sources":["/home/edwin/Development/code/phase-2/Group8-Nasaproject/src/Components/MarsWeather/marsWeather.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport API_KEY from \"../../Utils/apiKey\";\nimport styles from \"./marsWeather.module.css\";\n\nconst MarsWeather = () => {\n  const [weather, setWeather] = useState({});\n  const [temperature, setTemperature] = useState(\"\");\n  const [windSpeed, setWindSpeed] = useState(\"\");\n  const [pressure, setPressure] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.nasa.gov/insight_weather/?api_key=${API_KEY}&feedtype=json&ver=1.0`\n      )\n      .then((res) => {\n        setWeather(res.data);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (Object.keys(weather).length) {\n      setTemperature(getTemperature(weather));\n      setPressure(getPressure(weather));\n      setWindSpeed(getWindSpeed(weather));\n    }\n  }, [weather]);\n\n  const getAverage = (arr) => {\n    let sum = 0;\n    for (let item of arr) {\n      sum += item;\n    }\n\n    return parseInt(sum / arr.length);\n  };\n\n  const getTemperature = (data) => {\n    let temps = data.validity_checks[1219].AT.sol_hours_with_data;\n    return getAverage(temps);\n  };\n\n  const getWindSpeed = (data) => {\n    let temps = data.validity_checks[1219].HWS.sol_hours_with_data;\n    return getAverage(temps);\n  };\n\n  const getPressure = (data) => {\n    let temps = data.validity_checks[1219].PRE.sol_hours_with_data;\n    return getAverage(temps);\n  };\n\n  return (\n    <div className={styles.weather} style={{backgroundImage: `url(\"/planet-mars.jpg\")`}}>\n      <h2 className={styles.h2}>Weather on Mars</h2>\n\n      <div className={styles.data}>\n        <p>Temperature: {temperature} F</p>\n        <p>Wind Speed: {windSpeed} mph</p>\n        <p>Pressure: {pressure} Pa</p>\n      </div>\n    </div>\n  );\n};\n\nexport default MarsWeather;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}